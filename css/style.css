/* 1. 전체 화면 기본 세팅 */
html, body {
  height: 100%; /* 뷰포트 높이 꽉 채움 */
  margin: 0;
  padding: 0;
  overflow: hidden; /* 화면 전체 스크롤 없앰 */
  font-family: 'Noto Sans KR', sans-serif; /* Google Fonts 적용 */
  background: url('../images/BACKGROUND.jpeg') no-repeat center center fixed;
  background-size: cover;
  /* 모든 글자색을 하얀색으로! 배경 투명도 높아도 글자가 잘 보이게 그림자 추가! */
  color: white;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* 하얀 글자에 검은 그림자 */
}

/* 2. 최상위 앱 컨테이너 */
#app-container {
  position: relative;
  height: 100vh; /* 뷰포트 높이 꽉 채움 */
  display: flex; /* ⭐️ 플렉스 컨테이너 설정! 👇 */
  flex-direction: column; /* 자식 요소들을 세로로 배열 (h1, main-chat-area) */
  overflow: hidden; /* 앱 컨테이너 자체 스크롤 방지 */
  user-select: none;
  /* app-container 배경 투명도를 아주 높게! 배경 이미지 잘 보이게! */
  background-color: rgba(255, 255, 255, 0.1);
  box-shadow: inset 0 0 100px rgba(0,0,0,0.05);
}

/* h1 제목 스타일 (필요시 추가/수정) - 기본적으로 내용만큼 높이를 차지 */
#app-container h1 {
    /* margin-top: 0; */ /* 필요시 상단 여백 제거 */
    /* padding: 10px 20px; */ /* 필요시 패딩 추가 */
    /* background-color: rgba(255,255,255,0.05); */ /* 필요시 배경 투명하게 */
}


/* ⭐️ 메인 대화 영역 - h1 아래 남은 공간 모두 차지! 👇 */
/* 이 컨테이너가 채팅 박스 (#chat-box)와 입력창 (#input-area)을 담는 부모 역할을 할 거예요. */
#main-chat-area {
    flex-grow: 1; /* ⭐️ app-container의 남은 세로 공간 모두 차지! 👇 */
    display: flex; /* ⭐️ 플렉스 컨테이너 설정! 👇 */
    flex-direction: column; /* 자식 요소들 (chat-box, input-area) 세로 배열 */
    overflow: hidden; /* main-chat-area 자체 스크롤 방지 */
    /* min-height: 0; */ /* Flexbox 자식에서 overflow 문제 발생 시 필요할 수도 있으나, chat-box에 직접 설정 */
}

/* chat-container는 이제 main-chat-area와 동일한 역할을 하므로, 구조를 단순화하기 위해 main-chat-area를 직접 사용하거나, chat-container의 스타일을 main-chat-area에 병합할 수 있습니다. 여기서는 기존 구조를 유지하되 flexbox 설정을 명확히 합니다. */
/* ⭐️ 채팅 컨테이너 - main-chat-area 안에서 남은 공간 모두 차지! 👇 */
#chat-container {
     flex-grow: 1; /* ⭐️ 부모(main-chat-area)의 남은 세로 공간 모두 차지! 👇 */
     display: flex; /* ⭐️ 플렉스 컨테이너 설정! 👇 */
     flex-direction: column; /* 자식 요소들 (chat-box, input-area) 세로 배열 */
     overflow: hidden; /* chat-container 자체 스크롤 방지 */
     min-height: 0; /* ⭐️ 중요! Flex item (chat-box)에서 overflow 문제가 발생하지 않도록 부모에 설정! 👇 */
}


/* 3. 채팅 박스: 여기서만 스크롤! (chat-container의 자식) */
#chat-box {
  flex-grow: 1; /* ⭐️ chat-container 안에서 남은 세로 공간 모두 차지! 👇 */
  padding: 15px;
  margin: 15px;
  /* chat-box 배경 투명도를 아주 높게! */
  background: rgba(255, 255, 255, 0.15);
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.05);
  overflow-y: auto; /* ⭐️ 세로 스크롤 활성화! 내용 넘치면 스크롤바 생겨요. 👇 */
  overflow-x: hidden;
  z-index: 2;
  /* ⭐️ 중요! Flex item (chat-box)이 내용 때문에 부모를 넘치지 않고 스크롤되도록 최소 높이를 0으로 설정! 👇 */
  min-height: 0; /* Flexbox 안에서 스크롤 가능하게 하는 핵심! */

  /* 글자색은 전체 설정을 따르도록 (하얀색) 별도 설정 안함 */
  /* color: white; */
  /* 하얀 글자가 배경 위에서 잘 보이게 텍스트 그림자 추가 (전체 설정 따라감) */
   /* text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); */
}

/* 6. 입력창 영역 - chat-box 아래에 딱! 고정되게! (chat-container의 자식) */
#input-area {
  /* flex-grow: 1; ⭐️ flex-grow를 주지 않아야 고정된 높이를 가지고 아래에 붙어요! 👇 */
  padding: 12px 20px; /* 패딩으로 높이 확보 */
  border-top: 1px solid rgba(204, 204, 204, 0.3); /* 테두리도 투명하게 */
  /* 입력창 배경 투명도를 높게! */
  background-color: rgba(250, 250, 250, 0.15);
  box-shadow: inset 0 1px 2px rgba(0,0,0,0.05);
  /* height나 min-height를 명시적으로 줄 수도 있어요. 패딩으로 충분하다면 생략 가능. */
  /* height: 50px; */
  /* min-height: 50px; */
   flex-shrink: 0; /* ⭐️ 혹시 부모가 줄어들 때 입력창이 같이 줄어드는 것을 방지 (필요시) */
}

/* 7. 입력창 텍스트 색상 */
#input-area input[type="text"] {
  /* 입력창 글자색은 전체 설정(white)을 따름 */
  /* color: white; */
  border: none;
  outline: none;
  width: 100%;
  padding: 0;
  background: none;
   /* text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); */
}

#input-area input[type="text"]::placeholder {
   /* placeholder 글자색도 살짝 투명한 하얀색으로! */
   color: rgba(255, 255, 255, 0.7); /* 살짝 투명한 하얀색 */
   text-shadow: none; /* placeholder에는 그림자 없애거나 조절 */
}

/* 보내기 버튼 스타일 (기존 코드 유지) */
#send-button {
    cursor: pointer;
    padding: 8px 15px;
    border: none;
    border-radius: 5px;
    /* 보내기 버튼 배경 투명도 유지 */
    background-color: rgba(0, 123, 255, 0.6);
    /* 글자색은 전체 설정(white) 따름 */
    /* color: white; */
    font-weight: 600;
    margin-left: 10px;
    transition: background-color 0.3s ease;
    /* text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); */
}

#send-button:hover {
    background-color: rgba(0, 123, 255, 0.8);
}

/* 4. 고정 메뉴 컨테이너 - 오른쪽 위에 고정! (나머지 메뉴 관련 스타일은 아래에) */
#fixed-menu {
  position: fixed; /* 화면에 고정 */
  top: 15px; /* 위에서부터 15px 떨어진 위치 */
  right: 15px; /* 오른쪽에서부터 15px 떨어진 위치 */
  z-index: 99999; /* 다른 요소들 위에 표시 */
  user-select: none;
  /* 메뉴 전체 컨테이너 배경 투명도를 아주 높게! */
  background-color: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  padding: 5px;
}

/* ⭐️ 메뉴 아이콘 버튼 (점 3개 버튼) 스타일 👇 */
#menu-toggle-button {
  background-color: transparent; /* 배경 투명 */
  border: none; /* 테두리 없음 */
  padding: 5px;
  cursor: pointer;
  font-size: 24px;
  /* 아이콘 색상도 하얀색으로! */
  color: white;
  transition: color 0.3s ease;
   text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* 하얀 아이콘에 그림자 */
}

#menu-toggle-button:hover {
   /* 호버 시 색상도 살짝 투명한 하얀색으로! */
   color: rgba(255, 255, 255, 0.8);
}


/* ⭐️ 메뉴 항목들을 담는 컨테이너 스타일 👇 */
#menu-items-container {
  position: absolute;
  top: calc(100% + 5px);
  right: 0;
  /* 메뉴 항목 컨테이너 배경 투명도를 높게! */
  background-color: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 5px;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.15);
  z-index: 1001;
  min-width: 120px;
  display: flex;
  flex-direction: column;
  gap: 5px;
}


/* ⭐️ 메뉴 항목 컨테이너를 숨기는 클래스 (JS에서 토글) */
.hidden {
  display: none !important;
}


/* 5. 메뉴 버튼 (메뉴 항목 컨테이너 안의 버튼 스타일) */
#menu-items-container .menu-button {
  cursor: pointer;
  padding: 8px 14px;
  border-radius: 5px;
  border: none;
  background-color: transparent;
  transition: background-color 0.3s ease;
  font-weight: 600;
  /* 메뉴 버튼 글자색도 하얀색으로! */
  color: white;
  text-align: left;
   text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* 하얀 글자에 그림자 */
}

#menu-items-container .menu-button:hover {
  /* 메뉴 항목 버튼 호버 시 배경 투명도 조절 */
  background-color: rgba(240, 240, 240, 0.3);
}


/* 8. 스크롤바 스타일 커스텀 (#chat-box) */
#chat-box::-webkit-scrollbar {
  width: 10px;
}

#chat-box::-webkit-scrollbar-track {
  /* 스크롤바 트랙 배경 투명도 조절 */
  background: rgba(240, 240, 240, 0.1);
  border-radius: 10px;
}

#chat-box::-webkit-scrollbar-thumb {
  /* 스크롤바 썸 배경 투명도 조절 */
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 10px;
  border: 2px solid rgba(240, 240, 240, 0.1);
}


/* 9. 반응형 간단 처리 - 모바일 맞춤! */
@media (max-width: 600px) {
  #fixed-menu {
      top: 10px;
      right: 10px;
  }

   #menu-items-container {
       top: calc(100% + 5px);
       right: 0;
       min-width: 100px;
   }

  #chat-box {
    margin: 8px;
    padding: 8px;
     /* ⭐️ 모바일에서 하단 입력창 높이 고려해서 하단 마진 추가 (필요시) 👇 */
     /* height: calc(50vh - 8px*2 - <input-area height> - <h1 height>); 이런 계산 대신 flexbox 사용 */
  }

  #input-area {
    padding: 6px 12px;
    /* ⭐️ 모바일에서 입력창 아래에 붙도록 flexbox 덕분에 자동으로 될 거예요! 👇 */
    /* position: fixed; 같은 절대 위치 설정은 이제 필요 없어요 */
    /* bottom: 0; */
    /* left: 0; */
    /* right: 0; */
    /* width: 100%; */
    /* z-index: 100; */
    /* background-color: rgba(250, 250, 250, 0.9); */
  }

  /* 입력창 텍스트 크기 조절 (필요시) */
  #input-area input[type="text"] {
      font-size: 15px;
  }


  #send-button {
     padding: 5px 8px;
     font-size: 13px;
     margin-left: 6px;
  }

  /* 메시지 버블 반응형 */
  .message {
      max-width: 90%;
      padding: 6px 10px;
      font-size: 15px;
  }

  /* 메뉴 아이콘 크기 조절 */
  #menu-toggle-button {
      font-size: 20px;
      padding: 3px;
  }
   /* 메뉴 항목 버튼 크기 조절 */
  #menu-items-container .menu-button {
      padding: 6px 10px;
      font-size: 14px;
  }
}

/* ⭐️ HTML에서 .hidden 클래스를 사용하는 다른 요소들에 대한 스타일 (하루키 코드에 이미 있던 것들) */
#history-area.hidden { display: none; }
#bottom-buttons.hidden { display: none; }
.history-view-button.hidden { display: none; }

/* ⭐️ 기본 메시지, 사용자 메시지, AI 메시지 스타일 */
.message {
    margin-bottom: 10px;
    padding: 8px 12px;
    border-radius: 8px;
}

.user-message {
    /* 사용자 메시지 배경 투명도 유지 */
    background-color: rgba(0, 123, 255, 0.3);
    /* 글자색은 전체 설정(white) 따름 */
    /* color: white; */
    align-self: flex-end;
    margin-left: auto;
     /* 그림자도 전체 설정 따라감 */
    /* text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); */
}

.ai-message {
    /* AI 메시지 배경 투명도 유지 */
    background-color: rgba(220, 220, 220, 0.3);
     /* 글자색은 전체 설정(white) 따름 */
    /* color: white; */
    align-self: flex-start;
    margin-right: auto;
     /* 그림자도 전체 설정 따라감 */
    /* text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); */
}

/* 로딩 인디케이터 스타일 */
.ai-message.loading-indicator {
    /* 로딩 인디케이터 배경 투명도 유지 */
    background-color: rgba(180, 180, 180, 0.4);
    font-style: italic;
    /* 로딩 텍스트 색상도 하얀색 계열로! */
    color: rgba(255, 255, 255, 0.8);
    /* 그림자도 전체 설정 따라감 */
    /* text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); */
}